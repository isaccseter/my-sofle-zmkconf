#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    gresc_mo: gresc_mo {
        compatible = "zmk,behavior-hold-tap";
        label = "GRESC_MO";
        bindings = <&mo>, <&gresc>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        hold-while-undecided;
    };

    enter_mo: enter_mo {
        compatible = "zmk,behavior-hold-tap";
        label = "ENTER_MO";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        normal {
            bindings = <
&kp LA(TAB)     &kp F5      &kp F2        &kp F6         &kp F11    &kp F12             &kp UP_ARROW     &kp CAPSLOCK  &kp BACKSPACE      &kp BACKSPACE  &kp BACKSPACE  &kp BACKSPACE  &kp BACKSPACE
&kp TAB         &kp Q       &kp W         &kp E          &kp R      &kp T               &kp DOWN_ARROW   &kp Y         &kp U              &kp I          &kp O          &kp P          &kp BSLH
&kp LEFT_SHIFT  &kp A       &kp S         &kp D          &kp F      &kp G               &kp LEFT_ARROW   &kp H         &kp J              &kp K          &kp L          &kp SEMI       &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp Z       &kp X         &kp C          &kp V      &kp B               &kp RIGHT_ARROW  &kp N         &kp M              &kp COMMA      &kp DOT        &kp FSLH       &kp RIGHT_ALT
&kp C_MUTE      &kp DELETE  &kp LEFT_GUI  &gresc_mo 2 0  &kp SPACE  &kp LEFT_CONTROL    &kp ENTER        &mo 3         &enter_mo 1 ENTER  &mo 4          &kp BACKSPACE  &mo 5
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        symbol {
            bindings = <
&trans          &trans            &trans           &trans            &trans             &trans               &mmv MOVE_UP     &none          &none             &none                 &none                  &none         &trans
&kp LEFT_SHIFT  &kp DOLLAR        &kp AT           &kp HASH          &kp EXCLAMATION    &kp PERCENT          &mmv MOVE_DOWN   &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET     &trans
&kp TILDE       &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp DOUBLE_QUOTES    &mmv MOVE_LEFT   &kp LG(TAB)    &kp LEFT_CONTROL  &kp LEFT_SHIFT        &kp LEFT_ALT           &kp LEFT_GUI  &trans
&kp RIGHT_ALT   &kp PLUS          &kp UNDERSCORE   &kp EQUAL         &kp MINUS          &kp SINGLE_QUOTE     &mmv MOVE_RIGHT  &kp F6         &kp F7            &kp F8                &kp F7                 &kp F10       &trans
&kp C_MUTE      &kp LEFT_CONTROL  &trans           &trans            &trans             &trans               &mkp LCLK        &trans         &trans            &trans                &trans                 &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        num {
            bindings = <
&trans  &none          &none            &none         &none        &trans    &mmv MOVE_UP     &trans        &trans  &trans  &trans  &trans            &trans
&trans  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp KP_MINUS  &kp KP_PLUS  &trans    &mmv MOVE_DOWN   &kp KP_COMMA  &kp N7  &kp N8  &kp N9  &none             &kp LEFT_SHIFT
&trans  &kp LGUI       &kp LALT         &kp LSHFT     &kp LCTRL    &trans    &mmv MOVE_LEFT   &kp N0        &kp N4  &kp N5  &kp N6  &kp KP_DOT        &trans
&trans  &kp F1         &kp F2           &kp F3        &kp F4       &kp F5    &mmv MOVE_RIGHT  &kp KP_EQUAL  &kp N1  &kp N2  &kp N3  &none             &kp RIGHT_ALT
&trans  &trans         &trans           &trans        &trans       &trans    &mkp LCLK        &trans        &trans  &trans  &trans  &kp LEFT_CONTROL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        nav {
            bindings = <
&trans  &trans          &trans       &trans           &trans         &trans           &trans  &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SCROLLLOCK  &kp HOME     &kp UP_ARROW     &kp END        &kp INS          &trans  &none   &none      &none      &none     &none     &trans
&trans  &kp LC(LEFT)    &kp LEFT     &kp DOWN         &kp RIGHT      &kp LC(RIGHT)    &trans  &none   &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &trans
&trans  &none           &kp PAGE_UP  &kp PRINTSCREEN  &kp PAGE_DOWN  &none            &trans  &none   &none      &none      &none     &none     &trans
&trans  &trans          &trans       &trans           &trans         &trans           &trans  &trans  &trans     &trans     &trans    &trans
            >;
        };

        media_nav_settings {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_SEL 4    &trans  &trans  &trans          &trans        &trans     &trans      &trans
&bt BT_CLR      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &kp C_MUTE      &trans  &trans  &trans          &kp UP_ARROW  &trans     &trans      &trans
&trans          &trans                &kp C_PREVIOUS        &kp C_NEXT         &kp C_PLAY_PAUSE    &trans          &trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp C_MUTE  &trans
&trans          &trans                &trans                &kp C_REWIND       &kp C_FAST_FORWARD  &trans          &trans  &trans  &trans          &trans        &trans     &trans      &trans
&trans          &trans                &trans                &trans             &trans              &trans          &trans  &trans  &trans          &trans        &trans     &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
